{
  "name": "create-torrent",
  "description": "Create .torrent files",
  "version": "3.2.2",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bin": {
    "create-torrent": "./bin/cmd.js"
  },
  "browser": {
    "minimist": false
  },
  "bugs": {
    "url": "https://github.com/feross/create-torrent/issues"
  },
  "dependencies": {
    "bencode": "^0.6.0",
    "block-stream": "^0.0.7",
    "filestream": "^2.0.0",
    "flatten": "0.0.1",
    "git-sha1": "^0.1.2",
    "minimist": "^1.1.0",
    "multistream": "^1.0.0",
    "once": "^1.3.0",
    "piece-length": "^0.0.0",
    "run-parallel": "^1.0.0"
  },
  "devDependencies": {
    "brfs": "^1.1.2",
    "parse-torrent": "^1.1.0",
    "tape": "^2.5.0",
    "zuul": "^1.11.2"
  },
  "homepage": "https://github.com/feross/create-torrent",
  "keywords": [
    "torrent",
    "create torrent",
    "make",
    "torrent file",
    "torrent files",
    ".torrent",
    "create",
    "peer-to-peer",
    "bittorrent",
    "new",
    "webtorrent"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/create-torrent.git"
  },
  "scripts": {
    "test": "npm run test-node && npm run test-browser",
    "test-browser": "zuul -- test/browser/*.js",
    "test-browser-local": "zuul --local -- test/browser/*.js",
    "test-node": "tape test/*.js"
  },
  "testling": {
    "files": "test/browser/*.js"
  },
  "readme": "# create-torrent [![travis](https://img.shields.io/travis/feross/create-torrent.svg?style=flat)](https://travis-ci.org/feross/create-torrent) [![npm](https://img.shields.io/npm/v/create-torrent.svg?style=flat)](https://npmjs.org/package/create-torrent) [![gittip](https://img.shields.io/gittip/feross.svg?style=flat)](https://www.gittip.com/feross/)\n\n#### Create .torrent files\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/create-torrent.svg)](https://saucelabs.com/u/create-torrent)\n\n![creation](https://raw.githubusercontent.com/feross/create-torrent/master/img.jpg)\n\nThis module is used by [WebTorrent](http://webtorrent.io)! This module works in node.js and the browser (with [browserify](http://browserify.org/)).\n\n### install\n\n```\nnpm install create-torrent\n```\n\n### usage\n\nThe simplest way to use `create-torrent` is like this:\n\n```js\nvar createTorrent = require('create-torrent')\nvar fs = require('fs')\n\ncreateTorrent('/path/to/folder', function (err, torrent) {\n  if (!err) {\n    // `torrent` is a Buffer with the contents of the new .torrent file\n    fs.writeFile('my.torrent', torrent)\n  }\n})\n```\n\nA reasonable piece length (~1024 pieces) will automatically be selected for the .torrent\nfile, or you can override it if you want a different size (See API docs below).\n\n### api\n\n#### `createTorrent(input, [opts], function callback (err, torrent) {})`\n\nCreate a new `.torrent` file.\n\n`input` can be any of the following:\n\n- path to the file or folder on filesystem (string)\n- W3C [File](https://developer.mozilla.org/en-US/docs/Web/API/File) object (from an `<input>` or drag and drop)\n- W3C [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList) object (basically an array of `File` objects)\n- W3C [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) object\n- Node [Buffer](http://nodejs.org/api/buffer.html) object (works in [the browser](https://www.npmjs.org/package/buffer))\n\nOr, an **array of `File`, `Blob`, or `Buffer` objects**.\n\n`opts` is optional and allows you to set special settings on the produced .torrent file.\n\n``` js\n{\n  name: String,            // name of the torrent (default = basename of `path`)\n  comment: String,         // free-form textual comments of the author\n  createdBy: String,       // name and version of program used to create torrent\n  creationDate: Date       // creation time in UNIX epoch format (default = now)\n  private: Boolean,        // is this a private .torrent? (default = false)\n  pieceLength: Number      // force a custom piece length (number of bytes)\n  announceList: [[String]] // custom trackers (array of arrays of strings) (see [bep12](http://www.bittorrent.org/beps/bep_0012.html))\n  urlList: [String]        // web seed urls (see [bep19](http://www.bittorrent.org/beps/bep_0019.html))\n}\n```\n\nIf `announceList` is omitted, the following trackers will be included automatically:\n\n- udp://tracker.publicbt.com:80\n- udp://tracker.openbittorrent.com:80\n- udp://tracker.webtorrent.io:80\n\n`callback` is called with an error and a Buffer of the torrent data. It is up to you to\nsave it to a file if that's what you want to do.\n\n### command line\n\n```\nusage: create-torrent <directory OR file> {-o outfile.torrent}\n\nCreate a torrent file from a directory or file.\n\nIf an output file isn\\'t specified with `-o`, the torrent file will be\nwritten to stdout.\n```\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "_id": "create-torrent@3.2.2",
  "_from": "create-torrent@^3.1.0"
}
