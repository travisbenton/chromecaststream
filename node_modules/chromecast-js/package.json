{
  "name": "chromecast-js",
  "version": "0.1.4",
  "description": "Chromecast/Googlecast streaming module all in JS",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/guerrerocarlos/chromecast-js.git"
  },
  "keywords": [
    "chromecast",
    "googlecast",
    "stream",
    "streaming",
    "torrentv"
  ],
  "author": {
    "name": "Carlos Guerrero",
    "email": "guerrerocarlos@gmail.com"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/guerrerocarlos/chromecast-js/issues"
  },
  "homepage": "https://github.com/guerrerocarlos/chromecast-js",
  "dependencies": {
    "castv2-client": "0.0.4",
    "debug": "^1.0.4",
    "mdns-js2": "0.0.5"
  },
  "readme": "chromecast-js\n=================\n\nchromecast-js is a javascript client library for googlecast's remote playback protocol that uses DefaultMediaReceiver to play any (compatible) content in the Chromecast, it works by wrapping the [node-castv2-client](https://github.com/thibauts/node-castv2-client) module.\n\n## Installation\n\nFrom npm:\n\n\tnpm intall chromecast-js \n\n## Usage\n\n``` javascript\nchromecastjs = require('chromecast-js')\n\nvar browser = new chromecastjs.Browser()\n\nbrowser.on('deviceOn', function(device){\n  device.connect()\n  device.on('connected', function(){\n\n    device.play('http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4', 60, function(){\n        console.log('Playing in your chromecast!')\n    });\n\n    setTimeout(function(){\n        device.pause(function(){\n            console.log('Paused!')\n        });\n    }, 30000);\n\n    setTimeout(function(){\n        device.stop(function(){\n            console.log('Stoped!')\n        });\n    }, 40000);\n\n  })\n})\n\n```\n\n## Subtitles and Cover\n\nTo include subtitles and a cover image with the media title, use an Object instead of a string in the *play method*:\n\n``` javascript\n\nchromecastjs = require('../')\n\nvar browser = new chromecastjs.Browser()\n\nvar media = {\n    url : 'http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4',\n    subtitles: [{\n        language: 'en-US',\n        url: 'http://carlosguerrero.com/captions_styled.vtt',\n        name: 'English',\n    },\n    {\n        language: 'es-ES',\n        url: 'http://carlosguerrero.com/captions_styled_es.vtt',\n        name: 'Spanish',\n    }\n    ],\n    cover: {\n        title: 'Big Bug Bunny',\n        url: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg'\n    },\n    subtitles_style: { \n          backgroundColor: '#FFFFFFFF', // see http://dev.w3.org/csswg/css-color/#hex-notation\n          foregroundColor: '#000FFFF', // see http://dev.w3.org/csswg/css-color/#hex-notation\n          edgeType: 'DROP_SHADOW', // can be: \"NONE\", \"OUTLINE\", \"DROP_SHADOW\", \"RAISED\", \"DEPRESSED\"\n          edgeColor: '#AA00FFFF', // see http://dev.w3.org/csswg/css-color/#hex-notation\n          fontScale: 1.5, // transforms into \"font-size: \" + (fontScale*100) +\"%\"\n          fontStyle: 'BOLD_ITALIC', // can be: \"NORMAL\", \"BOLD\", \"BOLD_ITALIC\", \"ITALIC\",\n          fontFamily: 'Droid Sans',\n          fontGenericFamily: 'CURSIVE', // can be: \"SANS_SERIF\", \"MONOSPACED_SANS_SERIF\", \"SERIF\", \"MONOSPACED_SERIF\", \"CASUAL\", \"CURSIVE\", \"SMALL_CAPITALS\",\n          windowColor: '#AA00FFFF', // see http://dev.w3.org/csswg/css-color/#hex-notation\n          windowRoundedCornerRadius: 10, // radius in px\n          windowType: 'ROUNDED_CORNERS' // can be: \"NONE\", \"NORMAL\", \"ROUNDED_CORNERS\"\n    }\n}\n\n\nbrowser.on('deviceOn', function(device){\n  device.connect()\n  device.on('connected', function(){\n\n    // Starting to play Big Buck Bunny (made in Blender) exactly in the first minute without subtitles or cover.\n    //device.play('http://commondatastorage.googleapis.com/gtv-videos-bucket/big_buck_bunny_1080p.mp4', 60, function(){\n    //    console.log('Playing in your chromecast!')\n    //});\n\n    // Starting to play Big Buck Bunny (made in Blender) exactly in the first minute with example subtitles and cover.\n    device.play(media, 0, function(){\n        console.log('Playing in your chromecast!')\n\n        setTimeout(function(){\n            console.log('subtitles off!')\n            device.subtitlesOff(function(err,status){\n                if(err) console.log(\"error setting subtitles off...\")\n                console.log(\"subtitles removed.\")\n            });\n        }, 20000);\n\n        setTimeout(function(){\n            console.log('subtitles on!')\n            device.changeSubtitles(1, function(err, status){\n                if(err) console.log(\"error restoring subtitles...\")\n                console.log(\"subtitles restored.\")\n            });\n        }, 25000);\n\n        setTimeout(function(){\n            console.log('subtitles on!')\n            device.changeSubtitles(1, function(err, status){\n                if(err) console.log(\"error restoring subtitles...\")\n                console.log(\"subtitles restored.\")\n            });\n        }, 25000);\n\n        setTimeout(function(){\n            device.pause(function(){\n                console.log('Paused!')\n            });\n        }, 30000);\n\n        setTimeout(function(){\n            device.unpause(function(){\n                console.log('unpaused!')\n            });\n        }, 40000);\n\n        setTimeout(function(){\n            console.log('I ment English subtitles!')\n            device.changeSubtitles(0, function(err, status){\n                if(err) console.log(\"error restoring subtitles...\")\n                console.log(\"English subtitles restored.\")\n            });\n        }, 45000);\n\n        setTimeout(function(){\n            console.log('Increasing subtitles size...')\n            device.changeSubtitlesSize(10, function(err, status){\n                if(err) console.log(\"error increasing subtitles size...\")\n                console.log(\"subtitles size increased.\")\n            });\n        }, 46000);\n\n        setTimeout(function(){\n            device.seek(30,function(){\n                console.log('seeking forward!')\n            });\n        }, 50000);\n\n        setTimeout(function(){\n            console.log('decreasing subtitles size...')\n            device.changeSubtitlesSize(1, function(err, status){\n                if(err) console.log(\"error...\")\n                console.log(\"subtitles size decreased.\")\n            });\n        }, 60000);\n\n        setTimeout(function(){\n            device.pause(function(){\n                console.log('Paused!')\n            });\n        }, 70000);\n\n        setTimeout(function(){\n            device.seek(30,function(){\n                console.log('seeking forward!')\n            });\n        }, 80000);\n\n        setTimeout(function(){\n            device.seek(30,function(){\n                console.log('seeking forward!')\n            });\n        }, 85000);\n\n        setTimeout(function(){\n            device.unpause(function(){\n                console.log('unpaused!')\n            });\n        }, 90000);\n\n\n        setTimeout(function(){\n            device.seek(-30,function(){\n                console.log('seeking backwards!')\n            });\n        }, 100000);\n\n\n        setTimeout(function(){\n            device.stop(function(){\n                console.log('Stoped!')\n            });\n        }, 200000);\n\n    })\n  })\n}\n\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "chromecast-js@0.1.4",
  "_from": "chromecast-js@"
}
